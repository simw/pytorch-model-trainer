[project]
name = "pytorch-model-trainer"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "click>=8.1.8",
    "httpx>=0.28.1",
    "pydantic>=2.10.6",
    "tiktoken>=0.8.0",
]

[project.optional-dependencies]
cpu = [
  "torch>=2.6.0",
  "torchvision>=0.21",
]
cuda = [
  "torch>=2.6.0",
  "torchvision>=0.21",
]

[project.scripts]
train = "pytorch_model_trainer.cli:cli"


[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"


[tool.uv]
conflicts = [
  [
    { extra = "cpu" },
    { extra = "cuda" },
  ],
]

[tool.uv.sources]
torch = [
  { index = "pytorch-cpu", extra = "cpu" },
  { index = "pytorch-cu124", extra = "cuda" },
]
torchvision = [
  { index = "pytorch-cpu", extra = "cpu" },
  { index = "pytorch-cu124", extra = "cuda" },
]

[[tool.uv.index]]
name = "pytorch-cpu"
url = "https://download.pytorch.org/whl/cpu"
explicit = true

[[tool.uv.index]]
name = "pytorch-cu124"
url = "https://download.pytorch.org/whl/cu124"
explicit = true

[tool.uv.workspace]
members = ["gcloud-launcher"]


[tool.mypy]
strict = true


[tool.black]
color = true
line-length = 88
target-version = ["py312"]


[tool.ruff]
line-length = 88
indent-width = 4
target-version = "py312"

[tool.ruff.lint]
select = [
    "F",  # pyflakes
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "C90",  # Mccabe complexity
    "I",  # isort
    "N",  # pep8-naming
    "UP",  # pyupgrade
    "YTT",  # flake8-2020
    "ANN",  # flake8-annotations
    "ASYNC",  # flake8-ASYNC
    "S",  # flake8-bandit
    "BLE",  # flake8-blind-except
    "B",  # flake8-bugbear
    "A",  # flake8-builtins
    "C4",  # flake8-comprehensions
    "PT",  # flake8-pyteststyle
    "PD",  # pandas-vet
    "PL",  # pylint
    "PERF",  # perflint
]
ignore = []

[tool.ruff.lint.per-file-ignores]
"tests/**/**" = ["S"]  # Don't run bandit on tests (eg flagging on assert)

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.isort]
known-first-party = ["pytorch_model_trainer"]


[tool.pytest.ini_options]
testpaths = "tests"
xfail_strict = true
filterwarnings = [
    "error"
]


[tool.coverage.run]
source = ["src/pytorch_model_trainer"]
branch = true

[tool.coverage.report]
precision = 2
show_missing = true
exclude_lines = [
    'pragma: no cover',
    'raise NotImplementedError',
    'if TYPE_CHECKING:',
    '@overload',
]
fail_under = 100

[dependency-groups]
test = [
    "coverage>=7.6.10",
    "pytest>=8.3.4",
]
lint = [
    "black>=25.1.0",
    "mypy>=1.14.1",
    "ruff>=0.9.3",
]
